#!/usr/bin/env bash

# Distributed copy of a directory into an iRODS collection
# Christopher Harrison <ch12@sanger.ac.uk>

set -euo pipefail

BINARY="$(readlink -fn "$0")"
PROGNAME="$(basename "${BINARY}")"

# Maximum number of concurrent iputs
IPUT_LIMIT="${IPUT_LIMIT-30}"

# Maximum number of elements in job array
BSUB_LIMIT="${BSUB_LIMIT-1000}"

stderr() {
  local message="$*"

  if [[ -t 2 ]]; then
    message="\033[0;31m${message}\033[0m"
  fi

  >&2 echo -e "${message}"
}

usage() {
  cat <<-EOF
	Usage: ${PROGNAME} /your/source/directory /the/irods/collection
	EOF
}

main() {
  local mode="$1"

  case "${mode}" in
    "__setup")
      local source_dir="$1"
      local dest_coll="$2"

      # Generate manifest
      echo "Generating manifest..."
      local manifest="$(mktemp -d)"
      find "${source_dir}" -type d > "${manifest}/dirs"
      find "${source_dir}" -type f | split -dn "r/${BSUB_LIMIT}" - "${manifest}/files."
      mv "${manifest}" "${source_dir}/.imirror/manifest"

      # Create subcollections
      echo "Mirroring directory structure on iRODS..."
      # TODO

      # TODO Distributed iput job
      ;;

    "__copy")
      # TODO
      ;;

    *)
      if ! (( $# == 2 )); then
        stderr "Invalid arguments!"
        usage
        exit 1
      fi

      local source_dir="$(readlink -fn "$1")"
      local dest_coll="$2"

      if ! [[ -d "${source_dir}" ]]; then
        stderr "Source directory does not exist!"
        usage
        exit 1
      fi

      # TODO Check destination collection exists...

      mkdir -p "${source_dir}/.imirror/logs"

      # TODO Setup job
      ;;
  esac
}

main "${@-}"
